---
title: "Trump vs. Harris: A Data-Driven Forecast modeling the 2024 US Presidential Elections"
subtitle: "A close race but Trump, trumps Harris"
author: 
  - Sophia Brothers
  - Deyi Kong
  - Rayan Awad Alim
thanks: "Code and data are available at: [https://github.com/eeeee-cmd/US_Election/](https://github.com/eeeee-cmd/US_Election/)."
date: today
date-format: long
abstract: "This paper predicts the 2024 U.S. Presidential election. We utilizes linear regression model deploying polling data and demographic factors to predict both popular vote and Electoral College outcomes. The findings indicate a close race between Donald Trump and Kamala Harris, and we predict Trump will secure the Electoral College due to projected victories in key swing states while Harris maintains a popular vote lead. The results emphasize the role of state-level dynamics, particularly in swing states, in determining election outcomes."
format: pdf
toc: true
toc-depth: 3
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

# Install Packages if not downloaded:
required_packages <- c(
  "tidyverse", "sf", "here", "arrow", "ggplot2", "janitor", "purrr", "knitr", "kableExtra"
) 
for (p in required_packages) {
  if (!require(p, character.only = TRUE)) {
    install.packages(p, character.only = TRUE)
  }
}

library(tidyverse)
library(sf)
library(dplyr)
library(here)
library(arrow)
library(ggplot2)
library(janitor)
library(purrr)
library(knitr)
library(kableExtra)
```

# Introduction

The U.S. presidential election is a pivotal moment not only shapes domestic political landscape but also far-reaching its consequences on a global scale. Republicans and Democrats held primary elections across the country earlier in 2024 that eventually filtered down to the main candidates: Donald Trump and Kamala Harris. The polarized political climate and rapidly shifting public opinion have made predicting outcomes increasingly challenging, where winning key swing states is crucial to securing victory.

The main estimand is the projected support percentage and each candidate's winning probability in terms of state-level victories and Electoral College votes. This paper utilizes linear regression model incorporates numeric value of the credibility of pollsters, number of respondents, poll's recency to estimate the probability of each candidate winning in individual states. The objective is to translate these probabilities into a forecast the overall winner of the election. Our findings reveal a close race, with Trump holding a slight edge in the Electoral College due to projected victories in key swing states, despite Harris maintaining a lead in national popular vote estimates.

Trump's path to victory hinges on critical wins in states such as Pennsylvania, Georgia, and Wisconsin, where his projected margins are narrow but statistically significant. Meanwhile, Harris secures strong performances in populous Democratic strongholds like California and New York, but these do not offset Trump’s advantage in less populous yet crucial battleground states. This result underscores the significant influence of swing states and the Electoral College system in determining the outcome, particularly in closely contested elections. These insights contribute to a broader understanding of how statistical modeling can inform political strategy and election analysis.

The structure of the paper is as follows: [@sec-data] outlines the data sources and variables considered, followed by the model setup in [@sec-modset] and justification in [@sec-modjust]. The results in [@sec-result] presents the key findings of the analysis, with a discussion on the implications. [@sec-discussion] then discusses potential limitations and suggestions for future research. [@sec-appx] provides additional detailed information about the data, model and methodology.

# Data {#sec-data}

## Overview

The data used in this analysis comes from a combination of publicly available polling data for the 2024 U.S. Presidential election [@FiveThirtyEightPolls]. The analysis leverages the statistical programming language R [@citeR] and several libraries, including `tidyverse` [@tidyverse], `janitor` [@janitor], `knitr` [@knitr], `dplyr` [@dplyr], `arrow` [@arrow], `purrr` [@purrr], and `here` [@here], for data manipulation. `ggplot2` [@ggplot] and `kableExtra` [@kableExtra] for visualization. The dataset covers various polls conducted across multiple states, capturing the support for each major candidate—Donald Trump and Kamala Harris—along with detailed attributes of the polls.

## Measurement

The primary measurement process reflects the transformation of raw polling data into structured entries to actionable insights for election forecasting. We first select and rename key variables from raw data to focus on relevant information, such as pollster, pollscore, state, polling dates, sample size, and candidate support percentage. These variables represent essential poll characteristics that capture public sentiment in response to real-world campaign dynamics and demographic differences across states.

To address instances where the original data referenced Joe Biden instead of Kamala Harris, we assumed the entries for Biden will goes to Harris in consequences of Democratic Party. This approach is supported by "Harris’s truncated presidential campaign relies heavily upon President Biden’s policy framework and she eaddress the campaign’s weaknesses and win over critical voter demographics [@RealInstitutoElcano]. Thus, substituting Biden’s polling data with Harris’s ensures continuity in demographic appeal without altering established polling trends. Then we filter to include only polls relevant to the two candidates，Trump and Harris, and features like PollRecency were constructed to weigh recent polls higher. The data was cleaned by removing irrelevant or incomplete observations, and new variables were constructed where necessary.

## Outcome Variables

The main outcome variable of interest is the Percentage of support each candidate has in a given poll, which represents the proportion of respondents who favor one candidate over the other. This variable is crucial for estimating both the popular vote and Electoral College outcomes.

## Predictor Variables

Key predictors include:

PollScore: A numeric value that reflects the credibility of the pollster. Stands for "Predictive Optimization of Latent skill Level in Surveys, Considering Overall Record, Empirically." The error and bias we can attribute to a pollster. Negative numbers are better.

SampleSize: The number of respondents in each poll.

State: The U.S. state where the poll was conducted.

PollRecency: The number of days between the start date of the poll and the present, which gives more weight to recent polls.

NumericGrade: A numerical representation of the reliability of the pollster.

CandidateName: The name of the candidate being polled (either Donald Trump or Kamala Harris).

# Model

To predict the outcome of the 2024 U.S. Presidential election, we developed two linear regression models: one for Donald Trump and one for Kamala Harris. These models aim to estimate the percentage of support for each candidate based on the aforementioned predictor variables.

## Model Set-Up {#sec-modset}

This paper utilizes linear regression model: $$Percentage_i = \beta_0 + \beta_1 Pollscore_i + \beta_2 SampleSize + \beta_3 Numeric Grade_i + \beta_4 State_i + \beta_5PollRecency + \epsilon_i$$ where, Percentage$_i$ represents the predicted support percentage for a candidate in a given poll.

$\beta_i$ are the coefficients of the model that quantify the impact of each predictor.

$\epsilon_i$ is the error term.

The results from these models are aggregated to compute the predicted percentage of support for each candidate in each state. Based on these percentages, we forecast the likely winner of the state’s electoral votes.

## Model Justification {#sec-modjust}

This model was chosen for its balance between simplicity and predictive power. Linear regression allows us to capture relationships between polling quality, sample size, and recency, while still providing interpretable coefficients. Given the nature of polling data, this approach is both appropriate and commonly used in election forecasting. The model was validated using out-of-sample testing and Root Mean Square Error to ensure predictive accuracy.

```{r}
#| label: tbl-popularvote
#| tbl-cap: The percentage of support Harris and Trump receive overall
#| echo: false
#| eval: true
#| warning: false
#| message: false

cleaned_data <- read_parquet(here::here("data/analysis_data/model_data.parquet"))
lm_model <- readRDS(here::here("models/lm_model.rds"))

cleaned_data <- cleaned_data %>%
  mutate(PredictedPercentage = predict(lm_model, newdata = cleaned_data))

results <- cleaned_data %>%
  group_by(CandidateName) %>%
  summarise(AveragePredictedPercentage = mean(PredictedPercentage, na.rm = TRUE)) %>%
  arrange(desc(AveragePredictedPercentage)) %>%
  filter(AveragePredictedPercentage > 0)

total_percentage <- sum(results$AveragePredictedPercentage, na.rm = TRUE)

results <- results %>%
  mutate(NormalizedPercentage = (AveragePredictedPercentage / total_percentage) * 100)

results %>%
  kable(
    caption = "Predicted Percentage Vote for Donald Trump and Kamala Harris",
    col.names = c("Candidate Name", "Average Predicted Percentage", "Normalized Percentage"),
    digits = 2,
    booktabs = TRUE
  ) %>%
  kable_styling(latex_options = c("striped", "scale_down"))
```

```{r}
#| label: tbl-electoral
#| tbl-cap: The number of electoral college votes Harris vs Trump recieves
#| echo: false
#| eval: true
#| warning: false
#| message: false

cleaned_data <- read_parquet(here::here("data/analysis_data/electoral_data.parquet"))
lm_model_trump <- readRDS(here::here("models/lm_model_trump.rds"))
lm_model_harris <- readRDS(here::here("models/lm_model_harris.rds"))

unique_states <- distinct(cleaned_data, State)

prediction_data <- cleaned_data %>%
  group_by(State) %>%
  summarise(
    PollScore = mean(PollScore, na.rm = TRUE),
    SampleSize = mean(SampleSize, na.rm = TRUE),
    NumericGrade = mean(NumericGrade, na.rm = TRUE),
    PollRecency = mean(PollRecency, na.rm = TRUE),
    .groups = 'drop'
  )

prediction_data <- prediction_data %>%
  mutate(
    TrumpPredicted = predict(lm_model_trump, newdata = prediction_data),
    HarrisPredicted = predict(lm_model_harris, newdata = prediction_data)
  )

electoral_votes <- tibble(
  State = c("Alabama", "Kentucky", "North Dakota", "Alaska", "Louisiana", 
            "Ohio", "Arizona", "Maine", "Oklahoma", "Arkansas", 
            "Maryland", "Oregon", "California", "Massachusetts", "Pennsylvania", 
            "Colorado", "Michigan", "Rhode Island", "Connecticut", "Minnesota", 
            "South Carolina", "Delaware", "Mississippi", "South Dakota", 
            "District of Columbia", "Missouri", "Tennessee", "Florida", 
            "Montana", "Texas", "Georgia", "Nebraska", "Utah", 
            "Hawaii", "Nevada", "Vermont", "Idaho", "New Hampshire", 
            "Virginia", "Illinois", "New Jersey", "Washington", 
            "Indiana", "New Mexico", "West Virginia", "Iowa", 
            "New York", "Wisconsin", "Kansas", "North Carolina", 
            "Wyoming"),
  Votes = c(9, 8, 3, 3, 8, 
            17, 11, 4, 7, 6, 
            10, 8, 54, 11, 19, 
            10, 15, 4, 7, 10, 
            9, 3, 6, 3, 
            3, 10, 11, 30, 
            4, 40, 16, 5, 6, 
            4, 6, 3, 4, 4, 
            13, 19, 14, 12, 
            11, 5, 4, 6, 
            28, 10, 6, 16, 
            3)
)

predictions_with_votes <- prediction_data %>%
  left_join(electoral_votes, by = "State")

predictions_with_votes <- predictions_with_votes %>%
  mutate(
    Winner = case_when(
      TrumpPredicted > HarrisPredicted ~ "Donald Trump",
      HarrisPredicted > TrumpPredicted ~ "Kamala Harris",
      TRUE ~ "Tie"
    ),
    TrumpElectoralVotes = if_else(Winner == "Donald Trump", Votes, 0),
    HarrisElectoralVotes = if_else(Winner == "Kamala Harris", Votes, 0)
  )

electoral_totals <- predictions_with_votes %>%
  summarise(
    TrumpTotalElectoralVotes = sum(TrumpElectoralVotes, na.rm = TRUE),
    HarrisTotalElectoralVotes = sum(HarrisElectoralVotes, na.rm = TRUE)
  )

electoral_totals %>%
  kable(
    caption = "Predicted Number of Electoral Votes for Donald Trump and Kamala Harris",
    col.names = c("Trumps Total Electoral Votes", "Harriss Total Electoral Votes"),
    digits = 2,
    booktabs = TRUE
  ) %>%
  kable_styling(latex_options = c("striped", "scale_down"))
```

```{r}
#| label: tbl-statewinners
#| tbl-cap: The winners of each state, which determines who gets the electoral college votes for that state.
#| echo: false
#| eval: true
#| warning: false
#| message: false

state_winners <- predictions_with_votes %>%
  select(State, TrumpPredicted, HarrisPredicted) %>%
  mutate(
    Winner = case_when(
      TrumpPredicted > HarrisPredicted ~ "Donald Trump",
      HarrisPredicted > TrumpPredicted ~ "Kamala Harris",
      TRUE ~ "Tie"
    )
  )
#print(state_winners, n=54)

state_winners %>%
  slice(1:53) %>%
  kable(
    caption = "Predicted Percentage of Electoral Votes Per State",
    col.names = c("State", "Trump Predicted %", "Harris Predicted %", "Winner"),
    digits = 2,
    booktabs = TRUE
  ) %>%
  kable_styling(latex_options = c("striped", "scale_down"))
```

# Results {#sec-result}

The model results (see Appendix for details) show a clear distribution of support for both candidates across various states. The predicted percentages of support were normalized to ensure they summed up to 100%. After computing these results, we forecast that Donald Trump is likely to win 302 electoral votes, while Kamala Harris is expected to secure 233 electoral votes.

```{r}
#| label: tbl-sum
#| fig-cap: summary statistics for the cleaned data
#| echo: false
#| eval: true
#| warning: false
#| message: false
cleaned_data <- read_parquet(here::here("data/analysis_data/president_polls_cleaned.parquet"))

summary_stats <- cleaned_data %>%
  summarise(
    AveragePollScore = mean(PollScore, na.rm = TRUE),
    AverageSampleSize = mean(SampleSize, na.rm = TRUE),
    AveragePercentage = mean(Percentage, na.rm = TRUE),
    TotalPolls = n()
  )

# print(summary_stats)

summary_stats %>%
  kable(
    caption = "Summary Statistics of Model Results",
    col.names = c("Average Poll Score", "Average Sample Size", "Average Percentage", "Total Polls"),
    digits = 3,
    booktabs= TRUE
  ) %>%
  kable_styling(latex_options = c("striped", "scale_down"))
```

```{r}
#| label: fig-predictedscoremap
#| fig-cap: "Mapped Model-predicted outcomes for 2024 elections by State"
#| echo: false
#| eval: true
#| warning: false
#| message: false

states_map <- map_data("state")

electoral_data <- predictions_with_votes
electoral_data$State <- tolower(electoral_data$State) # matching state names

merged_data <- inner_join(states_map, electoral_data, by = c("region" = "State"))

map <- ggplot(merged_data, aes(x = long, y = lat, group = group)) +
  geom_polygon(aes(fill = Winner), color = "white") +
  scale_fill_manual(values = c("Donald Trump" = "red", "Kamala Harris" = "blue")) +
  labs(title = "2024 US Presidential Election Predictions by State",
       fill = "Predicted Winner") +
  theme_void() +
  theme(legend.position = "right")

map
```

```{r}
#| label: fig-pollscoredistribution
#| fig-cap: Distribution of Poll Scores by Candidate with denisty overlayed
#| echo: false
#| eval: true
#| warning: false
#| message: false

Select_candidates_cleaned_data <- cleaned_data %>%
  filter(CandidateName %in% c("Donald Trump", "Kamala Harris"))

ggplot(Select_candidates_cleaned_data, aes(x = PollScore)) +
  geom_histogram(aes(y = ..density..),
                 bins = 30,
                 fill = "blue",
                 color = "black",
                 alpha = 0.7) +
    geom_density(color = "black", fill = "salmon", alpha = 0.6) +
  labs(title = "Distribution of Poll Scores by Candidate",
       x = "Poll Score", 
       y = "Frequency") +
  theme_minimal() +
  facet_wrap(~ CandidateName)
```

```{r}
#| label: fig-samplesize
#| fig-cap: The distribution of sample sizes used in each poll
#| echo: false
#| eval: true
#| warning: false
#| message: false


ggplot(cleaned_data, aes(x = SampleSize)) +
  geom_histogram(bins = 30,
                 fill = "green",
                 color = "black",
                 alpha = 0.7) +
  labs(title = "Distribution of Sample Size",
       x = "Sample Size", 
       y = "Frequency")+
  theme_minimal()
```

```{r}
#| label: fig-percentage
#| fig-cap: The distribution of what percentage of support a candidate recieves in a poll
#| echo: false
#| eval: true
#| warning: false
#| message: false
ggplot(cleaned_data, aes(x = Percentage)) +
  geom_histogram(bins = 30,
                 fill = "orange",
                 color = "black",
                 alpha = 0.7) +
  labs(title = "Distribution of Percentage", 
       x = "Percentage",
       y = "Frequency") +
  theme_minimal()
```

```{r}
#| label: fig-candidatepercentage
#| fig-cap: violin plot displaying the percentage of support Harris and Trump receive compared to all candidates
#| echo: false
#| eval: true
#| warning: false
#| message: false

harris_trump_selection <- cleaned_data %>%
  filter(CandidateName %in% c("Donald Trump", 
                              "Kamala Harris"))

all_candidates <- cleaned_data %>%
  mutate(CandidateName = "All Candidates")

combined_data <- bind_rows(
  harris_trump_selection,
  all_candidates
)

ggplot(combined_data, aes(x = CandidateName, 
                          y = Percentage, 
                          fill = CandidateName)) +
  geom_violin(alpha = 0.5) +
  geom_boxplot(width = 0.1, color = "black", outlier.shape = NA) +
  labs(title = "Percentage by Candidate", 
       x = "Candidate", 
       y = "Percentage") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_manual(values = c("grey", "salmon", "blue")) +
  facet_wrap(~CandidateName, scales = "free_x") +
  theme_minimal()
```

```{r}
#| label: fig-statepercentage
#| fig-cap: The percentage of support seen by state
#| echo: false
#| eval: true
#| warning: false
#| message: false
ggplot(cleaned_data, aes(x = State, y = Percentage)) +
  geom_boxplot() +
  labs(title = "Percentage by State", x = "State", y = "Percentage") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 6)) 
```

```{r}
#| label: fig-corrmatrix
#| fig-cap: correlation between PollScore, the sample size of the poll, and the percentage of support for a candidate
#| echo: false
#| eval: true
#| warning: false
#| message: false
numerical_data <- cleaned_data %>%
  select(PollScore, SampleSize, Percentage)

correlation_matrix <- cor(numerical_data, use = "complete.obs")

library(ggcorrplot)
ggcorrplot(correlation_matrix, lab = TRUE, title = "Correlation Matrix")
```

\newpage

# Discussion {#sec-discussion}

In this paper, we developed and implemented a predictive model to forecast the outcome of the 2024 U.S. Presidential election, focusing on both popular vote percentages and Electoral College results. The model incorporates polling data, demographic information, and state-specific effects.

The model teaches us that state-level dynamics play a crucial role in determining the winner of U.S. Presidential elections. Even though Harris is expected to lead in the popular vote, Trump’s success in key battleground states suggests a victory in the Electoral College. An additional insight is that poll recency and pollster reliability significantly affect the accuracy of electoral predictions. By weighing recent and higher-quality polls more heavily, the model improves the robustness of its forecasts.

While the model adopts a linear regression framework for its simplicity and interpretability, this choice may limit its ability to capture more complex relationships among variables. Future iterations might benefit from exploring nonlinear models or advanced machine learning techniques, which could uncover patterns not readily observable through traditional methods.

One limitation of this model is that it depends entirely on polling data, which may not always capture late shifts in voter preferences or turnout variations. Furthermore, the model does not account for external factors like campaign events or last-minute developments, which can significantly influence electoral outcomes.

Future research should aim to integrate alternative data sources, such as social media sentiment or economic indicators, to provide a more comprehensive view of voter preferences. More advanced machine learning techniques could also be explored to improve the accuracy of future election predictions.

\newpage

# Appendix {#sec-appx}

## Pollster Methodology

The New York Times/Siena College Poll was ranked the most accurate political pollster in the US following the 2022 midterm elections [@PollsterRating]. They received the max 538 rating of 3 stars, one of only four pollsters to do so. They also had a pollscore of -1.5, meaning they had the least amount of error and bias attributed to them of the 282 pollsters ranked by 538 [@PollsterRating].

The Times/Siena Poll targets registered voters in the United States, emphasizing those in battleground states during presidential elections. Since the US decides it's President based on the Electoral College rather than the national popular vote, this is an important focus in order to correctly determine election outcomes. The sampling frame is derived from a voter file which containing lists of 200 million registered voters as well as their demographic information and prior voting behavior data [@TimesSienaPoll].

Each poll typically surveys around 1,000 respondents, which is deemed sufficient for achieving a margin of sampling error of approximately 3-4 percentage points. The Times found that tripling the sample size would only reduce the margin of error by a percent or two. This sample size allows for a balance between representation and efficiency [@TimesSienaPoll].

Respondents are recruited through live phone interviews conducted by trained interviewers from call centers in various states. The polling effort includes both landline and cellphone calls, with over 90% of respondents being reached via cellphones [@TimesSienaPoll].

Times/Siena uses a stratified random sampling technique, where the sample is divided into strata based on demographics such as age, race, gender, and party affiliation. This helps to ensure proportional representation from each group. Stratification helps in achieving a sample that mirrors the voting population, minimizing biases related to demographic variables (i.e. uneducated voters are less likely to respond to polls). However, it faces limitations as stratification increases the complexity of the sampling process, and if strata are not adequately represented in the sample, the results may still skew. Times/Siena combats this by applying weighting adjustments post-survey to correct for any demographic discrepancies [@TimesSienaPoll].

Given the declining response rates typical of phone surveys, the Times/Siena Poll faces challenges in reaching respondents. Approximately 2% of those contacted ultimately participate. This pollster uses follow-up calls to make multiple attempts to reach individuals who initially do not respond [@TimesSienaPoll]. In 2022, they conducted an experiment to find out if responses were skewed by non-response bias [@NonResponseBias]. This was done via a mail survey that offered a reward of up to \$25 for a response. This saw a 30% response rate, which is significantly larger than the 2% response rate Times/Siena gets over phone. Although there were differences between the types of respondents you get between the two methodologies, there was not a meaningful difference in who these respondants claim they would vote for [@NonResponseBias].

The questionnaires used by Times/Siena are designed to capture a broad range of opinions while remaining concise. Interviews are kept under 15 minutes to reduce survey fatigue and maximize response rates [@TimesSienaPoll]. This pollster prioritizes making sure every viewpoint is accurately represented in order to make the questions fair and ensure that respondents are not being swayed in a particular direction. This means the questions must remain objective and clear. However, a survey with limited response options and questions may mean a respondent's view is not captured in its full breadth. It also means that more nuanced opinions may be overlooked in favor of broader trends.

The New York Times/Siena College Poll is rated the most accurate pollster in the US for a reason - it has a well-defined methodology with a fleshed out population frame, sampling approach, and contingencies for non-response handling.

## Idealized Methodology

The idealized methodology for forecasting the US presidential election targets eligible registered voters from all 50 states and Washington D.C., ensuring representation from each state in order to create an Electoral College forecast, with particular emphasis on swing (battleground) states.

The sampling method will utilize stratified random sampling, which stratifies the sample by state. Voters will be further stratified based on factors such as age, gender, race/ethnicity, income, and political affiliation. In swing states, we will ensure oversampling to capture more granular data and reduce our margin of error.

To maintain a national margin of error of ±4%, based on the experiment conducted by Times/Siena, the total sample size will be 1,000 respondents per state [@TimesSienaPoll]. Swing states will be oversampled, with over 2,000 respondents to achieve a margin of error of ±2%. Given an estimated response rate of 2%, we aim to recruit approximately 50,000 potential respondents per state, with a target of 100,000 in battleground states.

To recruit respondents, we will utilize online panel providers like YouGov, Ipsos, and Dynata to obtain geographically and demographically targeted participants. Additionally, we will conduct state-specific phone surveys, employing interactive voice response (IVR) systems and live calls to reach older and less tech-savvy voters, particularly in states with a higher proportion of rural populations. To incentivize participation, all respondents will be entered into state-level sweepstakes, with one winner selected per state.

Data collection will be conducted on platforms such as Google Forms. Telephone surveys will follow the layout and workflow of the Google Form survey. The survey is designed to take approximately five to ten minutes to complete in order to minimize drop-off rates. It will include national-level questions, covering voting intent, candidate preference, key issues, and voter perceptions. After collection, the data will be weighted by state and demographic factors to ensure accuracy, utilizing the latest Census data and state voting records.

For data validation, we will implement several measures, including completion time checks to identify speeding responses, IP tracking to prevent duplicate entries, and reCAPTCHA to guard against bots. Respondents will provide their state of residence and ZIP code for additional verification. Furthermore, the data will be weighted according to state demographics and previous election turnout data, utilizing information from Census and state voting records. Special attention will be paid to swing states to ensure no key voter segments are underrepresented.

In terms of budget allocation, we will designate funds as follows:

1.  Survey Development: \$7,000
    -   The \$7,000 covers the costs associated with designing the survey, including the creation of questions, structuring the survey for clarity and flow, and ensuring that it meets methodological standards. It may also include hiring experts in survey design or consulting with statisticians to validate the survey framework and ensure questions are unbiased. Additionally, while Google Forms is free, this budget may account for platform costs if needed.
2.  Accurate Sampling: \$10,000
    -   The sampling budget is allocated for the costs associated with selecting a representative sample of voters. This includes expenses related to stratified random sampling, where the sample is segmented by various demographics and state representation. In order to ensure each demographic share is accurately represented, we may need to purchase access to demographic data or employ statisticians to ensure that the sampling aligns with the population of each state.
3.  Recruiting Respondents: \$45,000
    -   The majority of the budget is dedicated to recruiting respondents, which is necessary for achieving a large and demographically representative sample. This cost will cover payments to online panel providers which charge fees for access to their respondent pools. Additionally, this budget will cover costs related to conducting state-specific phone surveys and IVR calls, such as hiring call center staff or IVR technology.
4.  Respondent Incentives: \$28,000
    -   To encourage participation, we plan to run state-level sweepstakes, where respondents have a chance to win prizes for completing the survey. A \$500 prize will be awarded to one winner in each state (+ Washington DC). The remaining budget will cover administrative expenses associated with running the sweepstakes.
5.  Data Analysis and Reporting: \$10,000
    -   This portion of the budget is reserved for the costs related to analyzing the collected data and reporting the findings. This may include hiring data analysts or consultants who specialize in statistical analysis and survey data interpretation. The funds will also cover software tools necessary for data analysis, as well as the creation of visualizations and reports to communicate the results effectively.

An example of the survey can be found at this link: <https://forms.gle/igzK683kHLYytGvu8>

\newpage

# References
